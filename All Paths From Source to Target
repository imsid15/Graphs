//https://leetcode.com/problems/all-paths-from-source-to-target/description/
class Solution {
public:
    void dfs(vector<vector<int>>&ans,vector<int>&vis,int node,vector<vector<int>>& graph){
        vis.push_back(node);
        if(node==graph.size()-1){
            ans.push_back(vis);
        }
        for(int i=0;i<graph[node].size();i++){
            dfs(ans,vis,graph[node][i],graph);
        }
        vis.pop_back();
    }
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        vector<vector<int>>ans;
        vector<int>vis;
        dfs(ans,vis,0,graph);
        return ans;
    }
};
