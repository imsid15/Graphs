//https://leetcode.com/problems/maximal-network-rank/
class Solution {
public:
    int maximalNetworkRank(int n, vector<vector<int>>& roads) {
        vector<int>adj[n];
        vector<vector<int>>mat(n,vector<int>(n,0));
        for(int i=0;i<roads.size();i++){
            adj[roads[i][0]].push_back(roads[i][1]);
            adj[roads[i][1]].push_back(roads[i][0]);
            mat[roads[i][0]][roads[i][1]]=1;
            mat[roads[i][1]][roads[i][0]]=1;
        }
        int maxi=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(i==j)continue;
                int ans=adj[i].size()+adj[j].size();
                if(mat[i][j]==1){
                    maxi=max(maxi,ans-1);
                }
                else{
                    maxi=max(maxi,ans);
                }
            }
        }
        return maxi;
    }
};
