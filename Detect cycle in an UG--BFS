bool check(int V, vector<int> adj[],vector<int>&vis,int src,int parent){
        queue<pair<int,int>>q;
       q.push({src,parent});
       vis[src]=1;
       while(!q.empty()){
           int node=q.front().first;
           int parent=q.front().second;
           q.pop();
           for(int i=0;i<adj[node].size();i++){
               if(!vis[adj[node][i]]){
                   q.push({adj[node][i],node});
                   vis[adj[node][i]]=1;
               }
               else{
                   if(parent!=adj[node][i]){
                       return true;
                   }
               }
           }
       }
       return false;
    }
    bool isCycle(int V, vector<int> adj[]) {
        
        vector<int>vis(V,0);
       for(int i=0;i<V;i++){
           if(!vis[i]){
               if(check(V,adj,vis,i,-1)){
                   return true;
               }
           }
       }
       return false;
    }
